on:
  schedule:
    # Runs daily at 10:00 UTC
    - cron: "0 10 * * *"
  workflow_dispatch:

name: snapshot-release-workflow

jobs:
  publish-snapshot-release:
    strategy:
      matrix:
        flavor: [upstream, registry1]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Environment setup
        uses: ./.github/actions/setup
      - name: Login to GHCR
        run: uds run registry-login --set REGISTRY=ghcr.io --set REGISTRY_USERNAME=dummy --set REGISTRY_PASSWORD=${{ secrets.GITHUB_TOKEN }} --set REGISTRY_RETRY_INTERVAL=90
      - name: Login to registry1
        run: uds run registry-login --set REGISTRY=registry1.dso.mil --set REGISTRY_USERNAME=${{ secrets.IRON_BANK_ROBOT_USERNAME }} --set REGISTRY_PASSWORD=${{ secrets.IRON_BANK_ROBOT_PASSWORD }} --set REGISTRY_RETRY_INTERVAL=90
      - name: Set versions to snapshot
        run: |
          export SHORT_SHA="${SHA:0:7}"
          yq -ei '.metadata.version=env(SHORT_SHA), (.packages[]|select(has("ref"))|select(.name=="core")).ref=env(SHORT_SHA)' bundles/k3d-standard/uds-bundle.yaml
          yq -ei '.metadata.version=env(SHORT_SHA), (.packages[]|select(has("ref"))|select(.name=="core-istio")).ref=env(SHORT_SHA)' bundles/k3d-istio/uds-bundle.yaml
          yq -ei '.metadata.version=env(SHORT_SHA)' packages/istio/zarf.yaml
          yq -ei '.metadata.version=env(SHORT_SHA)' packages/standard/zarf.yaml
      - name: Create Packages and Bundles
        run: |
          ZARF_ARCHITECTURE=amd64 uds run -f tasks/create.yaml standard-package --no-progress --set FLAVOR=${{ matrix.flavor }}
          ZARF_ARCHITECTURE=amd64 uds run -f tasks/create.yaml k3d-standard-bundle --no-progress
          ZARF_ARCHITECTURE=amd64 uds run -f tasks/create.yaml istio-package --no-progress --set FLAVOR=${{ matrix.flavor }}
          ZARF_ARCHITECTURE=amd64 uds run -f tasks/create.yaml k3d-istio-bundle --no-progress

          if [ "${{ matrix.flavor }}" != "registry1" ]; then
            ZARF_ARCHITECTURE=arm64 uds run -f tasks/create.yaml standard-package --no-progress --set FLAVOR=${{ matrix.flavor }}
            ZARF_ARCHITECTURE=arm64 uds run -f tasks/create.yaml k3d-standard-bundle --no-progress
            ZARF_ARCHITECTURE=arm64 uds run -f tasks/create.yaml istio-package --no-progress --set FLAVOR=${{ matrix.flavor }}
            ZARF_ARCHITECTURE=arm64 uds run -f tasks/create.yaml k3d-istio-bundle --no-progress
          fi
      - name: Publish Standard Package
        run: uds run -f tasks/publish.yaml standard-package --set FLAVOR=${{ matrix.flavor }} --set TARGET_REPO="oci://ghcr.io/mxnxpx/packages/uds/snapshots" --set VERSION="${SHORT_SHA}"
      - name: Publish Upstream Flavored Bundles
        if: ${{ matrix.flavor != 'registry1'}}
        run: uds run -f tasks/publish.yaml bundles --set TARGET_REPO="oci://ghcr.io/mxnxpx/packages/uds/snapshots" --set VERSION="${SHORT_SHA}"
      - name: Save logs
        if: always()
        uses: ./.github/actions/save-logs
        with:
          suffix: -${{ matrix.flavor }}

  update-snapshot-latest-tag:
    needs: publish-snapshot-release
    env:
      GH_TOKEN: ${{ github.token }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Update snapshot-latest tag
        run: |
          if gh release view snapshot-latest; then
            gh release delete snapshot-latest --cleanup-tag -y
          fi
          gh release create snapshot-latest -t "snapshot-latest" -n "" --prerelease
