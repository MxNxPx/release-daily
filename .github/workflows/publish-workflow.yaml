name: publish-workflow

on:
  workflow_call:
    inputs:
      snapshot:
        description: 'true - for snapshot release'
        type: boolean
        required: true
        default: true

jobs:
  publish-snapshot-release:
    strategy:
      matrix:
        flavor: [upstream, registry1]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      SNAPSHOT: ${{ inputs.snapshot }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Environment setup
        uses: ./.github/actions/setup
      - name: Login to GHCR
        run: uds run registry-login --set REGISTRY=ghcr.io --set REGISTRY_USERNAME=dummy --set REGISTRY_PASSWORD=${{ secrets.GITHUB_TOKEN }} --set REGISTRY_RETRY_INTERVAL=90
      - name: Login to registry1
        run: uds run registry-login --set REGISTRY=registry1.dso.mil --set REGISTRY_USERNAME=${{ secrets.IRON_BANK_ROBOT_USERNAME }} --set REGISTRY_PASSWORD=${{ secrets.IRON_BANK_ROBOT_PASSWORD }} --set REGISTRY_RETRY_INTERVAL=90

      - name: Get snapshot version using git commit short sha and date
        if: ${{ inputs.snapshot }}
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          RELEASE_DATE=$(date +'%Y-%m-%d')
          echo "SNAPSHOT_VERSION=${RELEASE_DATE}-${SHORT_SHA}" >> $GITHUB_ENV
      - name: Set versions to snapshot
        if: ${{ inputs.snapshot }}
        run: |
          yq -ei '.metadata.version=env(SNAPSHOT_VERSION), (.packages[]|select(has("ref"))|select(.name=="core")).ref=env(SNAPSHOT_VERSION)' bundles/k3d-standard/uds-bundle.yaml
          yq -ei '.metadata.version=env(SNAPSHOT_VERSION), (.packages[]|select(has("ref"))|select(.name=="core-istio")).ref=env(SNAPSHOT_VERSION)' bundles/k3d-istio/uds-bundle.yaml
          yq -ei '.metadata.version=env(SNAPSHOT_VERSION)' packages/istio/zarf.yaml
          yq -ei '.metadata.version=env(SNAPSHOT_VERSION)' packages/standard/zarf.yaml

      - name: Create Packages and Bundles
        run: |
          ZARF_ARCHITECTURE=amd64 uds run -f tasks/create.yaml standard-package --no-progress --set FLAVOR=${{ matrix.flavor }}
          ZARF_ARCHITECTURE=amd64 uds run -f tasks/create.yaml k3d-standard-bundle --no-progress
          ZARF_ARCHITECTURE=amd64 uds run -f tasks/create.yaml istio-package --no-progress --set FLAVOR=${{ matrix.flavor }}
          ZARF_ARCHITECTURE=amd64 uds run -f tasks/create.yaml k3d-istio-bundle --no-progress
          if [ "${{ matrix.flavor }}" != "registry1" ]; then
            ZARF_ARCHITECTURE=arm64 uds run -f tasks/create.yaml standard-package --no-progress --set FLAVOR=${{ matrix.flavor }}
            ZARF_ARCHITECTURE=arm64 uds run -f tasks/create.yaml k3d-standard-bundle --no-progress
            ZARF_ARCHITECTURE=arm64 uds run -f tasks/create.yaml istio-package --no-progress --set FLAVOR=${{ matrix.flavor }}
            ZARF_ARCHITECTURE=arm64 uds run -f tasks/create.yaml k3d-istio-bundle --no-progress
          fi

      - name: Publish Standard Package
        run: |
          if [ "${SNAPSHOT}" = "true" ]; then
             uds run -f tasks/publish.yaml standard-package --set FLAVOR=${{ matrix.flavor }} --set TARGET_REPO="ghcr.io/mxnxpx/packages/uds/snapshots" --set VERSION="${SNAPSHOT_VERSION}"
          else
             uds run -f tasks/publish.yaml standard-package --set FLAVOR=${{ matrix.flavor }}
          fi

      - name: Publish Upstream Flavored Bundles
        if: ${{ matrix.flavor != 'registry1' }}
        run: |
          if [ "${SNAPSHOT}" = "true" ]; then
             uds run -f tasks/publish.yaml bundles --set TARGET_REPO="ghcr.io/mxnxpx/packages/uds/snapshots" --set VERSION="${SNAPSHOT_VERSION}"
          else
             uds run -f tasks/publish.yaml bundles
          fi

#      - name: Publish Standard Package Snapshot
#        if: ${{ inputs.snapshot }}
#        run: uds run -f tasks/publish.yaml standard-package --set FLAVOR=${{ matrix.flavor }} --set TARGET_REPO="ghcr.io/mxnxpx/packages/uds/snapshots" --set VERSION="${SNAPSHOT_VERSION}"

#      - name: Publish Upstream Flavored Bundles Snapshot
#        if: ${{ inputs.snapshot && matrix.flavor != 'registry1' }}
#        run: uds run -f tasks/publish.yaml bundles --set TARGET_REPO="ghcr.io/mxnxpx/packages/uds/snapshots" --set VERSION="${SNAPSHOT_VERSION}"

      - name: Save logs
        if: always()
        uses: ./.github/actions/save-logs
        with:
          suffix: -${{ matrix.flavor }}
